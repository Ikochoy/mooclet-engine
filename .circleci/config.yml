version: 2.1

orbs:
  python: circleci/python@1.2

workflows:
  build:
    jobs:
      - build-38

jobs:
  build-38:
    docker:
      - image: cimg/python:3.8
      - image: cimg/postgres:9.6-postgis
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: ""
    steps:
      - checkout
      - restore_cache:
          key: venv-38-{{ .Branch }}-{{ checksum "/home/circleci/project/mooclet_engine/requirements.txt" }}
      - run:
          name: Build and validate
          command: |
            sudo apt-get update
            sudo apt-get install build-essential python3-dev libldap2-dev libsasl2-dev slapd ldap-utils tox lcov valgrind libblas-dev liblapack-dev gfortran
            git submodule init
            git submodule update
            python3 -m venv /home/circleci/venv --copies
            . /home/circleci/venv/bin/activate
            cd mooclet_engine
            pip install --upgrade pip
            pip install --upgrade wheel
            pip install -r requirements.txt
      - save_cache:
          key: venv-38-{{ .Branch }}-{{ checksum "/home/circleci/project/mooclet_engine/requirements.txt" }}
          paths:
            - "/home/circleci/venv"
      - run:
          name: Build and validate
          command: |
            . /home/circleci/venv/bin/activate
            cd mooclet_engine
            pwd
            find .
            export DJANGO_SETTINGS_MODULE=mooclet_engine.settings.circle
            python manage.py migrate
            python manage.py test
            pylint engine
            # pylint data_exchange
            bandit -r .
      - store_test_results:
          path: test-results/
      - store_artifacts:
          path: test-reports/
          destination: python_app
